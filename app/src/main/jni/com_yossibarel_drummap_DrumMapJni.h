/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_yossibarel_drummap_DrumMapJni */

#ifndef _Included_com_yossibarel_drummap_DrumMapJni
#define _Included_com_yossibarel_drummap_DrumMapJni
#ifdef __cplusplus
extern "C" {
#endif

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_drumMap(JNIEnv *, jobject, jint, jint, jstring fileName);

JNIEXPORT JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setEnvADSR(JNIEnv *, jobject, jint index, jint envType, jint type, jdouble value);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_keyDown(JNIEnv *env, jobject instance, jint index);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_keyRelese(JNIEnv *env, jobject instance, jint index);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setFx(JNIEnv *env, jobject instance, jint mIndexChannel, jint fxKey, jint fxKeyParam, jfloat damp);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_addEffect(JNIEnv *env, jobject instance, jint mChannelIndex, jint indexFx);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_openChannelFile(JNIEnv *env, jobject instance, jint channelIndex, jstring path_, jlong length);

JNIEXPORT jlong JNICALL Java_com_yossibarel_drummap_DrumMapJni_getDurationMs(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_loopBetween(JNIEnv *env, jobject instance, jint channelIndex, jdouble start, jdouble end, jboolean startPlay);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setReverse(JNIEnv *env, jobject instance, jint mIndexChannel, jboolean checked);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setLFORateWave(JNIEnv *env, jobject instance, jint mChannelIndex, jint lfo1, jdouble rate);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setLFOPresentWave(JNIEnv *env, jobject instance, jint mChannelIndex, jdouble v);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setLFOAmplitudeWave(JNIEnv *env, jobject instance, jint mChannelIndex, jint lfo1, jdouble amp);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setLFOTypeWave(JNIEnv *env, jobject instance, jint mChannelIndex, jint lfo1, jint i);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_sendFxToLFO(JNIEnv *env, jobject instance, jstring indexLfo, jint channelIndex, jint fxType, jint keyEffectParam, jint lfo1, jint lfo2, jdouble start, jdouble end, jboolean isUpdate); ; JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_sendFxToControlXY(JNIEnv *env, jobject instance, jstring mIndexLfo_, jint mIndex, jint control, jint mFxType, jint keyEffectParam, jdouble start, jdouble end, jboolean isUpdate);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setControlXYValue(JNIEnv *env, jobject instance, jint control, jdouble val);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_scretch(JNIEnv *env, jobject instance, jdouble value);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_resetRecord(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_startRecord(JNIEnv *env, jobject instance, jstring s_);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_stopRecord(JNIEnv *env, jobject instance);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_startPlayRecord(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_stopPlayRecord(JNIEnv *env, jobject instance);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getRecordPosition(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setScratchEnable(JNIEnv *env, jobject instance, jint channel, jboolean scratchEnable);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setStopPlayOnRelease(JNIEnv *env, jobject instance, jint mIndexChannel, jboolean checked);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_getStopPlayOnRelease(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getPositionPrecent(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setPitchBand(JNIEnv *env, jobject instance, jdouble pitch);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_enableSequencerPattern(JNIEnv *env, jobject instance, jint indexChannel, jint indexPattern, jboolean enable);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setValueSequencerPattern(JNIEnv *env, jobject instance, jint mIndexChannel, jint indexPattern, jint mIndexValue, jdouble val);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_enableSequencer(JNIEnv *env, jobject instance, jint mIndexChannel, jboolean checked);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setSeqRate(JNIEnv *env, jobject instance, jint mIndexChannel, jint progress);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getSeqPattern(JNIEnv *env, jobject instance, jint indexChannel, jint indexPattern, jint indexValue);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_getSeqIndexPlaying(JNIEnv *env, jobject instance, jint indexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_resetSeq(JNIEnv *env, jobject instance, jint mIndexChannel, jint mIndexValue);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setPitch(JNIEnv *env, jobject instance, jint mIndexChannel, jdouble pitch);

JNIEXPORT jintArray JNICALL Java_com_yossibarel_drummap_DrumMapJni_getActiveEffect(JNIEnv *env, jobject instance, jint mChannelIndex);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setPlayFromStartLoop(JNIEnv *env, jobject instance, jint indexChannel, jboolean isPlayFromStartLoop);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_getPlayFromStartLoop(JNIEnv *env, jobject instance, jint indexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setLoop(JNIEnv *env, jobject instance, jint indexChannel, jboolean isLoop);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setBpm(JNIEnv *env, jobject instance, jdouble bpm);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_startGlobalRecord(JNIEnv *env, jobject instance, jstring file_);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_enableFilter(JNIEnv *env, jobject instance, jint mIndexChannel, jboolean checked);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_sendFxToADSR(JNIEnv *env, jobject instance, jstring mIndexControl, jint indexChannel, jint mFxType, jint keyEffectParam, jdouble start, jdouble end, jboolean isUpdate);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_sendFxToCurve(JNIEnv *env, jobject instance, jstring indexString_, jint indexChannel, jint curve, jint mFxType, jint keyEffectParam, jdouble start, jdouble end, jboolean isUpdate);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setVolume(JNIEnv *env, jobject instance, jint indexChannel, jdouble vol);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getFxValue(JNIEnv *env, jobject instance, jint indexChannel, jint fxType, jint fxKeyParam);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getEnvADSR(JNIEnv *env, jobject instance, jint adsrType, jint indexChannel, jint adsrParam);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_getLFOTypeWave(JNIEnv *env, jobject instance, jint channelIndex, jint lfoType);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getLFOAmplitudeWave(JNIEnv *env, jobject instance, jint mChannelIndex, jint lfoType);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getLFORateWave(JNIEnv *env, jobject instance, jint indexChannel, jint lfo);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getLfoWavePresent(JNIEnv *env, jobject instance, jint ihannelIndex);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getVolume(JNIEnv *env, jobject instance, jint indexChannel);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_getModState(JNIEnv *env, jobject instance, jint indexChannel, jstring indexMod_);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_removeModFx(JNIEnv *env, jobject instance, jint indexChannel, jstring indexMod_, jint keyEffectParam, jint mod);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_getCurrentFilter(JNIEnv *env, jobject instance, jint indexChannel);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getMainPosition(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setMainQuantize(JNIEnv *env, jobject instance, jint quntizeIndex);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setQuantizeEnable(JNIEnv *env, jobject instance, jboolean enable);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_getIsPlay(JNIEnv *env, jobject instance, jint indexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_playChannel(JNIEnv *env, jobject instance, jint channelIndex);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_stopPlayChannel(JNIEnv *env, jobject instance, jint channelIndex);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setStereo(JNIEnv *env, jobject instance, jint mIndexChannel, jdouble left, jdouble right, int progress);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_getStereoProgress(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setMainChannelPitch(JNIEnv *env, jobject instance, jint mIndexChannel, jdouble mPitch);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getMainChannelPitch(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT jfloatArray JNICALL Java_com_yossibarel_drummap_DrumMapJni_getAllViewMeters(JNIEnv *env, jobject instance);

JNIEXPORT jfloat JNICALL Java_com_yossibarel_drummap_DrumMapJni_getViewMeterChannelLeft(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT jfloat JNICALL Java_com_yossibarel_drummap_DrumMapJni_getViewMeterChannelRight(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_getSeqRateProgress(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setSeqStepState(JNIEnv *env, jobject instance, jint state, jint indexChannel);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_getSeqStepState(JNIEnv *env, jobject instance, jint indexChannel);

JNIEXPORT jfloatArray JNICALL Java_com_yossibarel_drummap_DrumMapJni_getWaveform(JNIEnv *env, jobject instance, jint mIndexChannel, jint bufferSize);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_openChannelFileForEdit(JNIEnv *env, jobject instance, jint channelIndex, jstring jpath, jlong length);

JNIEXPORT jfloatArray JNICALL Java_com_yossibarel_drummap_DrumMapJni_getEditBuffer(JNIEnv *env, jobject instance, jint sizeByte);

JNIEXPORT jbyteArray JNICALL Java_com_yossibarel_drummap_DrumMapJni_getFilePath(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getStopPlayPosition(JNIEnv *env, jobject instance, jint mChannelIndex);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getStartPlayPosition(JNIEnv *env, jobject instance, jint mChannelIndex);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_getIsLoaded(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setPosition(JNIEnv *env, jobject instance, jint mChannelIndex, jdouble positionMs);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_getIsLoop(JNIEnv *env, jobject instance, jint mChannelIndex);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_getBpm(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_playPiano(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_pausePiano(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_removeMidiPiano(JNIEnv *env, jobject instance, jint mIndexChannel, jint mIndex);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_addMidiPiano(JNIEnv *env, jobject instance, jint mIndexChannel, jint key, jfloat mStart, jfloat mEnd);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getPianoPosition(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getPianoPositionBeat(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT jfloatArray JNICALL Java_com_yossibarel_drummap_DrumMapJni_getMidiFloat(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setPianoPositionBeat(JNIEnv *env, jobject instance, jint mIndexChannel, jdouble pianoPosition);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setPianoBeatsDuration(JNIEnv *env, jobject instance, jint mIndexChannel, jfloat mDuration);

JNIEXPORT jfloat JNICALL Java_com_yossibarel_drummap_DrumMapJni_getPianoDurationBeat(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT jfloat JNICALL Java_com_yossibarel_drummap_DrumMapJni_getPianoStartPlayPosition(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT jfloat JNICALL Java_com_yossibarel_drummap_DrumMapJni_getPianoStopPlayPosition(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setStartEndLoopPositionPrecentPiano(JNIEnv *env, jobject instance, jint indexChannel, jdouble start, jdouble end);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_getIsPianoPlay(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setSeqState(JNIEnv *env, jobject instance, jint state, jint mIndexChannel);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_getSeqState(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_getSeqIndexEnable(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setSeqIndexEnable(JNIEnv *env, jobject instance, jint mIndexChannel, jint indexSeq);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_addChannelItem(JNIEnv *env, jobject instance, jint mChannel, jdouble mStart, jdouble mEnd);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getMainPositionBeat(JNIEnv *env, jobject instance);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getMainDurationBeat(JNIEnv *env, jobject instance);

JNIEXPORT jfloatArray JNICALL Java_com_yossibarel_drummap_DrumMapJni_getChannelItemsFloat(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_removeChannelItem(JNIEnv *env, jobject instance, jint mIndex);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_getIsMainGridPlay(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_playMainGrid(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_pauseMainGrid(JNIEnv *env, jobject instance);

JNIEXPORT jfloat JNICALL Java_com_yossibarel_drummap_DrumMapJni_getMainGridStartPlayPosition(JNIEnv *env, jobject instance);

JNIEXPORT jfloat JNICALL Java_com_yossibarel_drummap_DrumMapJni_getMainGridStopPlayPosition(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setMainGridBeatsDuration(JNIEnv *env, jobject instance, jfloat mDuration);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setMainGridPositionBeat(JNIEnv *env, jobject instance, jdouble positionBeat);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setStartEndLoopPositionPrecentMainGrid(JNIEnv *env, jobject instance, jdouble startPlayPositionPercent, jdouble endPlayPositionPercent);

JNIEXPORT jint JNICALL Java_com_yossibarel_drummap_DrumMapJni_getChannelColor(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setChannelColor(JNIEnv *env, jobject instance, jint mIndexChannel, jint color);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_resetChannelItemAdded(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_updateChannelAddedEnd(JNIEnv *env, jobject instance, jdouble mEnd);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_updateMidiAddedEnd(JNIEnv *env, jobject instance, jint mIndexChannel, jfloat mEnd);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_resetMidiAdded(JNIEnv *env, jobject instance, jint indexChannel);

JNIEXPORT jfloatArray JNICALL Java_com_yossibarel_drummap_DrumMapJni_getRecordWaveform(JNIEnv *env, jobject instance, jint bufferSize);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setIsPianoCursorFollowPosition(JNIEnv *env, jobject instance, jint mIndexChannel, jboolean isFollow);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_getIsPianoCursorFollowPosition(JNIEnv *env, jobject instance, jint mIndexChannel);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_getIsGridCursorFollowPosition(JNIEnv *env, jobject instance);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setIsGridCursorFollowPosition(JNIEnv *env, jobject instance, jboolean isFollow);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_updateMidiPiano(JNIEnv *env, jobject instance, jint mIndexChannel, jint mIndexKey, jint note, jfloat mStart, jfloat mEnd);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_getIsMuted(JNIEnv *env, jobject instance, jint mChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setMuteed(JNIEnv *env, jobject instance, jint mChannel, jboolean checked);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_getIsSolo(JNIEnv *env, jobject instance, jint mChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setSolo(JNIEnv *env, jobject instance, jint mChannel, jboolean checked);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_randSeq(JNIEnv *env, jobject instance, jint mIndexChannel, jint mIndexValue);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_replaceFxChannelPosition(JNIEnv *env, jobject instance, jint mChannel, jint fromPosition, jint toPosition);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_deleteEffectChannel(JNIEnv *env, jobject instance, jint mIndexChannel, jint index);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_isEnbableSendFx1(JNIEnv *env, jobject instance, jint mChannel);

JNIEXPORT jboolean JNICALL Java_com_yossibarel_drummap_DrumMapJni_isEnbableSendFx2(JNIEnv *env, jobject instance, jint mChannel);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getSendFx1(JNIEnv *env, jobject instance, jint mChannel);

JNIEXPORT jdouble JNICALL Java_com_yossibarel_drummap_DrumMapJni_getSendFx2(JNIEnv *env, jobject instance, jint mChannel);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_enableSendFx1(JNIEnv *env, jobject instance, jint mChannel, jboolean checked);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_enableSendFx2(JNIEnv *env, jobject instance, jint mChannel, jboolean checked);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setSendFx1(JNIEnv *env, jobject instance, jint mChannel, jdouble v);

JNIEXPORT void JNICALL Java_com_yossibarel_drummap_DrumMapJni_setSendFx2(JNIEnv *env, jobject instance, jint mChannel, jdouble v);

#ifdef __cplusplus
}
#endif
#endif